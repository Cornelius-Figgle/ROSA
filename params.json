{"name":"GeoPattern","tagline":"Create beautiful generative geometric background images from a string","body":"Generate beautiful tiling SVG patterns from a string. The string is converted\r\ninto a SHA and a color and pattern are determined based on the values in the\r\nhash. The color is determined by shifting the hue and saturation from a default\r\n(or passed in) base color. One of 16 patterns is used (or you can specify one)\r\nand the sizing of the pattern elements is also determined by the hash values.\r\n\r\nYou can use the generated pattern as the `background-image` for a container.\r\nUsing the `base64` representation of the pattern still results in SVG\r\nrendering, so it looks great on retina displays.\r\n\r\nSee the [GitHub Guides](http://guides.github.com) site and the [Explore section\r\nof GitHub](https://github.com/explore) are examples of this library in action.\r\nBrandon Mills has put together an awesome [live preview\r\npage](http://btmills.github.io/geopattern/geopattern.html) that's built on his\r\nJavascript port.\r\n\r\n## Installation\r\n\r\n**Note:** as of version `1.4.0`, Ruby version 2 or greater is required.\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'geo_pattern'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install geo_pattern\r\n\r\n## Usage\r\n\r\nMake a new pattern:\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown')\r\n```\r\n\r\nTo specify a base background color (with a hue and saturation that adjusts depending on the string):\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', base_color: '#fc0')\r\n```\r\n\r\nTo use a specific background color (w/o any hue or saturation adjustments):\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', color: '#fc0')\r\n```\r\n\r\nTo use a specific [pattern generator](#available-patterns):\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', patterns: :sine_waves)\r\n```\r\n\r\nTo use a subset of the [available patterns](#available-patterns):\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', patterns: [:sine_waves, :xes])\r\n```\r\n\r\nGet the SVG string:\r\n\r\n```ruby\r\nputs pattern.to_svg\r\n# => <svg xmlns=\"http://www.w3.org/2000/svg\" ...\r\n```\r\n\r\nGet the Base64 encoded string:\r\n\r\n```ruby\r\nputs pattern.to_base64\r\n# => PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC...\r\n```\r\n\r\nYou can then use this string to set the background:\r\n\r\n```html\r\n<div style=\"background-image: <%= pattern.to_data_uri %>\"></div>\r\n```\r\n\r\n## Available patterns\r\n\r\n*Note: As of version `1.3.0`, string references (e.g. `overlapping_circles`)\r\nare deprecated in favor of symbol references (e.g. `:overlapping_circles`).*\r\n\r\n### :chevrons\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/chevrons.png)\r\n\r\n\r\n### :octagons\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/octogons.png)\r\n\r\n### :overlapping_circles\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/overlapping_circles.png)\r\n\r\n### :plus_signs\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/plus_signs.png)\r\n\r\n### :xes\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/xes.png)\r\n\r\n### :sine_waves\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/sine_waves.png)\r\n\r\n### :hexagons\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/hexagons.png)\r\n\r\n### :overlapping_rings\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/overlapping_rings.png)\r\n\r\n### :plaid\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/plaid.png)\r\n\r\n### :triangles\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/triangles.png)\r\n\r\n### :squares\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/squares.png)\r\n\r\n### :nested_squares\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/nested_squares.png)\r\n\r\n### :mosaic_squares\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/mosaic_squares.png)\r\n\r\n### :concentric_circles\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/concentric_circles.png)\r\n\r\n### :diamonds\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/diamonds.png)\r\n\r\n### :tessellation\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/tessellation.png)\r\n\r\n### GeoPattern::ChevronPattern\r\n\r\n![](http://jasonlong.github.io/geo_pattern/examples/chevrons.png)\r\n\r\n\r\n## Inspection of pattern\r\n\r\nIf you want to get some more information about a pattern, please use the\r\nfollowing methods.\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', patterns: [:sine_waves, :xes])\r\n\r\n# The color of the background in html notation\r\npattern.background.color.to_html\r\n\r\n# The color of the background in svg notation\r\npattern.background.color.to_svg\r\n\r\n\r\n# The input colors\r\npattern.background.preset.color\r\npattern.background.preset.base_color\r\n\r\n# The generator\r\npattern.background.generator\r\n```\r\n\r\nTo get more information about the structure of the pattern, please use the following methods:\r\n\r\n```ruby\r\npattern = GeoPattern.generate('Mastering Markdown', patterns: [:sine_waves, :xes])\r\n\r\n# The name of the structure\r\npattern.structure.name\r\n\r\n# The generator of the structure\r\npattern.structure.generator\r\n```\r\n\r\n## Rake Support\r\n\r\n```ruby\r\nstring = 'Mastering markdown'\r\n\r\nrequire 'geo_pattern/geo_pattern_task'\r\n\r\nGeoPattern::GeoPatternTask.new(\r\n  name: 'generate',\r\n  description: 'Generate patterns to make them available as fixtures',\r\n  data: {\r\n    'fixtures/generated_patterns/diamonds_with_color.svg'      => { input: string, patterns: [:diamonds], color: '#00ff00' },\r\n    'fixtures/generated_patterns/diamonds_with_base_color.svg' => { input: string, patterns: [:diamonds], base_color: '#00ff00' }\r\n  }\r\n)\r\n```\r\n\r\n## Developing\r\n\r\n### Generate Fixtures\r\n\r\n```ruby\r\nrake fixtures:generate\r\n```\r\n\r\n### Run tests\r\n\r\n```ruby\r\nrake test\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it ( http://github.com/jasonlong/geo_pattern/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Development\r\n\r\nPrefix rspec-commandline with `RSPEC_PROFILE=1` to output the ten slowest\r\nexamples of the test suite.\r\n\r\n```bash\r\nRSPEC_PROFILE=1 bundle exec rspec\r\n```\r\n\r\n## Ports & related projects\r\n\r\nJavaScript port by Brandon Mills:\r\nhttps://github.com/btmills/geopatterns-js\r\n\r\nPython port by Bryan Veloso:\r\nhttps://github.com/bryanveloso/geopatterns\r\n\r\nPHP port by Anand Capur:\r\nhttps://github.com/redeyeventures/geopattern-php\r\n\r\nGo port by Pravendra Singh:\r\nhttps://github.com/pravj/geo_pattern\r\n\r\nCoffeeScript port by Aleks (muchweb):\r\nhttps://github.com/muchweb/geo-pattern-coffee\r\n\r\nMiddleman extension by @maxmeyer:\r\nhttps://github.com/fedux-org/middleman-geo_pattern\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}